#!/bin/sh

# Check for minimum number of arguments.
REQUIRED_ARGS=1 # Script requires 3 argument
if [ $# -lt "$REQUIRED_ARGS" ]
then
  echo "Usage: `basename $0` <satscan_src directory> <boost directory> <binaries ouitput directory>])"
  echo "   example: `basename $0` /prj/treescan/build/treescan /prj/treescan/build/boost/boost_1_70_0 /prj/treescan/build/binaries/linux"
  exit 1
fi

(
cpp_compiler="/usr/bin/g++"
c_compiler="/usr/bin/gcc"
binaries="$3"
treescan_src="$1"
boost_src="$2"
processors="-j8"
pthread="-pthread"
lib_target="libtreescan.linux.so"

rm -f $binaries/*

echo building TreeScan for 32-bit system using gcc3.4.4
./makescript.sh $binaries/treescan32 $treescan_src $boost_src -m32 -O3 $cpp_compiler $processors $pthread

echo building TreeScan shared object for 32-bit system using gcc3.4.4
./makescript.so.sh $lib_target $binaries/libtreescan32.so $treescan_src $boost_src -m32 -O3 $cpp_compiler $processors $pthread

echo building TreeScan for 64-bit system using gcc3.4.4
./makescript.sh $binaries/treescan64 $treescan_src $boost_src -m64 -O3 $cpp_compiler $processors $pthread

echo building TreeScan shared object for 64-bit system using gcc3.4.4
./makescript.so.sh $lib_target $binaries/libtreescan64.so $treescan_src $boost_src -m64 -O3 $cpp_compiler $processors $pthread

) 1> build.stdout 2> build.stderr