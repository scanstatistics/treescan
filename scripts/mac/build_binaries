#!/bin/sh

(
cpp_compiler="/usr/bin/g++"
osx_min_version="-mmacosx-version-min=10.6"
binaries="/Users/hostovic/prj/treescan.development/binaries/mac"
treescan_src="/Users/hostovic/prj/treescan.development/treescan"
boost_src="/Users/hostovic/prj/boost/boost_1_52_0"
processors="-j2"

rm -f $binaries/*


# Intel command-line binaries

echo building TreeScan for 32-bit system using gcc4.0.1 - i386
./makescript.mac.sh $binaries/treescan_gcc4.0.1_i386_32bit $treescan_src $boost_src -m32 -O3 $cpp_compiler "-arch i386" $osx_min_version $processors

echo building TreeScan for 64-bit system using gcc4.0.1 - x86_64
./makescript.mac.sh $binaries/treescan_gcc4.0.1_x86_64_64bit $treescan_src $boost_src -m64 -O3 $cpp_compiler "-arch x86_64" $osx_min_version $processors

# Create universal binary - only interested in Intel architectures
echo creating universal binary for 32-bit and 64-bit systems
lipo -create $binaries/treescan_gcc4.0.1_i386_32bit $binaries/treescan_gcc4.0.1_x86_64_64bit -output $binaries/treescan


# Intel JNI libraries

echo building TreeScan shared object for 32-bit system using gcc4.0.1 - i386
./makescript.so.mac.sh $binaries/libtreescan.gcc4.0.1_i386_32bit.jnilib $treescan_src $boost_src -m32 -O3 $cpp_compiler "-arch i386" $osx_min_version $processors

echo building TreeScan shared object for 64-bit system using gcc4.0.1 - x86_64
./makescript.so.mac.sh $binaries/libtreescan.gcc4.0.1_x86_64_64bit.jnilib $treescan_src $boost_src -m64 -O3 $cpp_compiler "-arch x86_64" $osx_min_version $processors

# Create universal binary - only interested in Intel architectures
echo creating universal shared object binary for 32-bit and 64-bit systems
lipo -create $binaries/libtreescan.gcc4.0.1_i386_32bit.jnilib $binaries/libtreescan.gcc4.0.1_x86_64_64bit.jnilib -output $binaries/libtreescan.jnilib

) 1> build.stdout 2> build.stderr
