<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.3" type="org.netbeans.modules.form.forminfo.JInternalFrameFormInfo">
  <Properties>
    <Property name="closable" type="boolean" value="true"/>
    <Property name="defaultCloseOperation" type="int" value="0"/>
    <Property name="iconifiable" type="boolean" value="true"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Component id="_inputTab" max="32767" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Component id="_inputTab" max="32767" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="_inputTab">

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Group type="102" alignment="0" attributes="0">
                          <EmptySpace min="10" pref="10" max="10" attributes="0"/>
                          <Component id="_reportResultsAsHTML" min="-2" max="-2" attributes="0"/>
                      </Group>
                      <Group type="102" alignment="1" attributes="0">
                          <Component id="_treelFileTextField" pref="513" max="32767" attributes="2"/>
                          <EmptySpace min="-2" pref="6" max="-2" attributes="0"/>
                          <Component id="_treeFileBrowseButton" min="-2" pref="25" max="-2" attributes="0"/>
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="_treeFileImportButton" min="-2" pref="25" max="-2" attributes="0"/>
                      </Group>
                      <Component id="_controlFileLabel" alignment="0" min="-2" max="-2" attributes="0"/>
                      <Group type="102" alignment="0" attributes="0">
                          <Component id="_countFileTextField" pref="513" max="32767" attributes="1"/>
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="_countFileBrowseButton" min="-2" pref="25" max="-2" attributes="0"/>
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="_countFileImportButton" min="-2" pref="25" max="-2" attributes="0"/>
                      </Group>
                      <Group type="102" alignment="0" attributes="0">
                          <EmptySpace min="-2" pref="10" max="-2" attributes="0"/>
                          <Component id="_duplicatesInCaseFile" pref="565" max="32767" attributes="0"/>
                      </Group>
                      <Group type="102" alignment="0" attributes="0">
                          <Component id="_caseFileLabel" min="-2" max="-2" attributes="0"/>
                          <EmptySpace min="521" pref="521" max="521" attributes="0"/>
                      </Group>
                      <Group type="102" alignment="1" attributes="0">
                          <Component id="_outputFileTextField" pref="544" max="32767" attributes="0"/>
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="_resultsFileBrowseButton" min="-2" pref="25" max="-2" attributes="0"/>
                      </Group>
                      <Component id="_resultsFileLabel" alignment="0" min="-2" max="-2" attributes="0"/>
                      <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
                  </Group>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="_controlFileLabel" min="-2" max="-2" attributes="0"/>
                  <EmptySpace min="-2" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="3" attributes="0">
                      <Component id="_treelFileTextField" alignment="3" min="-2" max="-2" attributes="0"/>
                      <Component id="_treeFileImportButton" alignment="3" min="-2" max="-2" attributes="0"/>
                      <Component id="_treeFileBrowseButton" alignment="3" min="-2" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace min="-2" max="-2" attributes="0"/>
                  <Component id="_caseFileLabel" min="-2" max="-2" attributes="0"/>
                  <EmptySpace min="-2" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="3" attributes="0">
                      <Component id="_countFileBrowseButton" alignment="3" min="-2" max="-2" attributes="0"/>
                      <Component id="_countFileTextField" alignment="3" min="-2" max="-2" attributes="0"/>
                      <Component id="_countFileImportButton" alignment="3" min="-2" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="_duplicatesInCaseFile" min="-2" pref="14" max="-2" attributes="0"/>
                  <EmptySpace type="separate" min="-2" max="-2" attributes="0"/>
                  <Component id="_resultsFileLabel" min="-2" max="-2" attributes="0"/>
                  <EmptySpace min="-2" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="3" attributes="0">
                      <Component id="_outputFileTextField" alignment="3" min="-2" max="-2" attributes="0"/>
                      <Component id="_resultsFileBrowseButton" alignment="3" min="-2" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="_reportResultsAsHTML" min="-2" max="-2" attributes="0"/>
                  <EmptySpace pref="30" max="32767" attributes="0"/>
                  <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Component class="javax.swing.JLabel" name="_resultsFileLabel">
          <Properties>
            <Property name="text" type="java.lang.String" value="Results File:" noResource="true"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JTextField" name="_outputFileTextField">
        </Component>
        <Component class="javax.swing.JButton" name="_resultsFileBrowseButton">
          <Properties>
            <Property name="text" type="java.lang.String" value="..." noResource="true"/>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_resultsFileBrowseButton.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xa;        JFileChooser fc = new JFileChooser(org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory);&#xa;        fc.setDialogTitle(&quot;Select Results File&quot;);&#xa;        fc.addChoosableFileFilter(new InputFileFilter(&quot;html&quot;,&quot;Results Files (*.html)&quot;));&#xa;        fc.addChoosableFileFilter(new InputFileFilter(&quot;txt&quot;,&quot;Results Files (*.txt)&quot;));&#xa;        if (fc.showSaveDialog(ParameterSettingsFrame.this) == JFileChooser.APPROVE_OPTION) {&#xa;            org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory = fc.getCurrentDirectory();&#xa;            _outputFileTextField.setText(fc.getSelectedFile().getAbsolutePath());&#xa;        }&#xa;    }&#xa;});&#xa;"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JLabel" name="_caseFileLabel">
          <Properties>
            <Property name="text" type="java.lang.String" value="Count File:" noResource="true"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JTextField" name="_countFileTextField">
        </Component>
        <Component class="javax.swing.JButton" name="_countFileBrowseButton">
          <Properties>
            <Property name="text" type="java.lang.String" value="..." noResource="true"/>
            <Property name="toolTipText" type="java.lang.String" value="Browse for count file ..." noResource="true"/>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_countFileBrowseButton.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xa;        JFileChooser fc = new JFileChooser(org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory);&#xa;        fc.setDialogTitle(&quot;Select Count File&quot;);&#xa;        fc.addChoosableFileFilter(new InputFileFilter(&quot;txt&quot;,&quot;Text Files (*.txt)&quot;));&#xa;        fc.addChoosableFileFilter(new InputFileFilter(&quot;cts&quot;,&quot;Count Files (*.cts)&quot;));&#xa;        int returnVal = fc.showOpenDialog(ParameterSettingsFrame.this);&#xa;        if (returnVal == JFileChooser.APPROVE_OPTION) {&#xa;            org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory = fc.getCurrentDirectory();&#xa;            _countFileTextField.setText(fc.getSelectedFile().getAbsolutePath());&#xa;        }&#xa;    }&#xa;});&#xa;"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="_countFileImportButton">
          <Properties>
            <Property name="text" type="java.lang.String" value="..." noResource="true"/>
            <Property name="toolTipText" type="java.lang.String" value="Import count file ..." noResource="true"/>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_countFileImportButton.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xa;        try {&#xa;            JFileChooser fc = new JFileChooser(org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory);&#xa;            fc.setDialogTitle(&quot;Select Counts File Import Source&quot;);&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;dbf&quot;,&quot;dBase Files (*.dbf)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;csv&quot;,&quot;Delimited Files (*.csv)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;xls&quot;,&quot;Excel Files (*.xls)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;txt&quot;,&quot;Text Files (*.txt)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;cts&quot;,&quot;Count Files (*.cts)&quot;));&#xa;            int returnVal = fc.showOpenDialog(ParameterSettingsFrame.this);&#xa;            if (returnVal == JFileChooser.APPROVE_OPTION) {&#xa;                org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory = fc.getCurrentDirectory();&#xa;                LaunchImporter(fc.getSelectedFile().getAbsolutePath(), FileImporter.InputFileType.Counts);&#xa;            }&#xa;        } catch (Throwable t) {&#xa;            new ExceptionDialog(org.treescan.gui.TreeScanApplication.getInstance(), t).setVisible(true);&#xa;        }&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JTextField" name="_treelFileTextField">
        </Component>
        <Component class="javax.swing.JLabel" name="_controlFileLabel">
          <Properties>
            <Property name="text" type="java.lang.String" value="Tree File:" noResource="true"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JButton" name="_treeFileBrowseButton">
          <Properties>
            <Property name="text" type="java.lang.String" value="..." noResource="true"/>
            <Property name="toolTipText" type="java.lang.String" value="Browse for tree file ..." noResource="true"/>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_treeFileBrowseButton.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xa;        JFileChooser fc = new JFileChooser(org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory);&#xa;        fc.setDialogTitle(&quot;Select Tree File&quot;);&#xa;        fc.addChoosableFileFilter(new InputFileFilter(&quot;txt&quot;,&quot;Text Files (*.txt)&quot;));&#xa;        fc.addChoosableFileFilter(new InputFileFilter(&quot;tre&quot;,&quot;Tree Files (*.tre)&quot;));&#xa;        int returnVal = fc.showOpenDialog(ParameterSettingsFrame.this);&#xa;        if (returnVal == JFileChooser.APPROVE_OPTION) {&#xa;            org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory = fc.getCurrentDirectory();&#xa;            _treelFileTextField.setText(fc.getSelectedFile().getAbsolutePath());&#xa;        }&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="_treeFileImportButton">
          <Properties>
            <Property name="text" type="java.lang.String" value="..." noResource="true"/>
            <Property name="toolTipText" type="java.lang.String" value="Import tree file ..." noResource="true"/>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_treeFileImportButton.addActionListener(new java.awt.event.ActionListener() {&#xa;    public void actionPerformed(java.awt.event.ActionEvent e) {&#xa;        try {&#xa;            JFileChooser fc = new JFileChooser(org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory);&#xa;            fc.setDialogTitle(&quot;Select Tree File Import Source&quot;);&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;dbf&quot;,&quot;dBase Files (*.dbf)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;csv&quot;,&quot;Delimited Files (*.csv)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;xls&quot;,&quot;Excel Files (*.xls)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;txt&quot;,&quot;Text Files (*.txt)&quot;));&#xa;            fc.addChoosableFileFilter(new InputFileFilter(&quot;tre&quot;,&quot;Tree Files (*.tre)&quot;));&#xa;            int returnVal = fc.showOpenDialog(ParameterSettingsFrame.this);&#xa;            if (returnVal == JFileChooser.APPROVE_OPTION) {&#xa;                org.treescan.gui.TreeScanApplication.getInstance().lastBrowseDirectory = fc.getCurrentDirectory();&#xa;                LaunchImporter(fc.getSelectedFile().getAbsolutePath(), FileImporter.InputFileType.Tree);&#xa;            }&#xa;        } catch (Throwable t) {&#xa;            new ExceptionDialog(org.treescan.gui.TreeScanApplication.getInstance(), t).setVisible(true);&#xa;        }&#xa;    }&#xa;});"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JCheckBox" name="_duplicatesInCaseFile">
          <Properties>
            <Property name="text" type="java.lang.String" value="data contains duplicates field"/>
          </Properties>
        </Component>
        <Container class="javax.swing.JPanel" name="jPanel1">
          <Properties>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                <TitledBorder title="Advanced Settings"/>
              </Border>
            </Property>
          </Properties>

          <Layout>
            <DimensionLayout dim="0">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" alignment="0" attributes="0">
                      <EmptySpace max="-2" attributes="0"/>
                      <Group type="103" groupAlignment="0" attributes="0">
                          <Component id="_conditionalAnalysis" alignment="0" min="-2" max="-2" attributes="0"/>
                          <Group type="102" alignment="0" attributes="0">
                              <Component id="_labelMonteCarloReplications" min="-2" max="-2" attributes="0"/>
                              <EmptySpace max="-2" attributes="0"/>
                              <Component id="_montCarloReplicationsTextField" min="-2" pref="88" max="-2" attributes="0"/>
                          </Group>
                      </Group>
                      <EmptySpace pref="121" max="32767" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
            <DimensionLayout dim="1">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" alignment="0" attributes="0">
                      <Group type="103" groupAlignment="3" attributes="0">
                          <Component id="_labelMonteCarloReplications" alignment="3" min="-2" max="-2" attributes="0"/>
                          <Component id="_montCarloReplicationsTextField" alignment="3" min="-2" max="-2" attributes="0"/>
                      </Group>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="_conditionalAnalysis" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="32767" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
          </Layout>
          <SubComponents>
            <Component class="javax.swing.JLabel" name="_labelMonteCarloReplications">
              <Properties>
                <Property name="text" type="java.lang.String" value="Number of Monte Carlo replications (0, 9, 999, or value ending in 999):" noResource="true"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JTextField" name="_montCarloReplicationsTextField">
              <Properties>
                <Property name="text" type="java.lang.String" value="999" noResource="true"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="_montCarloReplicationsTextField.addFocusListener(new java.awt.event.FocusAdapter() {&#xa;    public void focusLost(java.awt.event.FocusEvent e) {&#xa;        while (_montCarloReplicationsTextField.getText().length() == 0)&#xa;            if (undo.canUndo()) undo.undo(); else _montCarloReplicationsTextField.setText(&quot;999&quot;);&#xa;    }&#xa;});&#xa;_montCarloReplicationsTextField.addKeyListener(new java.awt.event.KeyAdapter() {&#xa;    public void keyTyped(java.awt.event.KeyEvent e) {&#xa;        Utils.validatePostiveNumericKeyTyped(_montCarloReplicationsTextField, e, 10);&#xa;    }&#xa;});&#xa;_montCarloReplicationsTextField.getDocument().addUndoableEditListener(new UndoableEditListener() {&#xa;    public void undoableEditHappened(UndoableEditEvent evt) {&#xa;        undo.addEdit(evt.getEdit());&#xa;    }&#xa;});&#xa;"/>
              </AuxValues>
            </Component>
            <Component class="javax.swing.JCheckBox" name="_conditionalAnalysis">
              <Properties>
                <Property name="text" type="java.lang.String" value="Perform conditional analysis"/>
              </Properties>
            </Component>
          </SubComponents>
        </Container>
        <Component class="javax.swing.JCheckBox" name="_reportResultsAsHTML">
          <Properties>
            <Property name="text" type="java.lang.String" value="report results as HTML"/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
